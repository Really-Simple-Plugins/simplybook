{"version":3,"file":"src_routes_settings_221122settingsId_lazy_jsx.js","mappings":";;;;;;;;;;;;;;;;AAAA,MAAMA,iBAAiB,GAAIC,UAAU,IAAK;EACxC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAU,EAAEC,aAAa,IAAI,EAAE;EACvD,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKR,UAAU,CAAC;EAEpE,IAAI,CAACK,YAAY,EAAE;IACjB,MAAM,IAAII,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACA,OAAO;IAAEJ;EAAa,CAAC;AACzB,CAAC;;AAED;AACO,MAAMK,KAAK,GAAGC,mBAAmB,CAAC,4BAA4B,CAAC,CAAC;EACrEC,MAAM,EAAEA,CAAC;IAAEC;EAAO,CAAC,KAAKd,iBAAiB,CAACc,MAAM,CAACb,UAAU,CAAC;EAC5Dc,SAAS,EAAEC;AACb,CAAC,CAAC;;AAEF;AACA,SAASA,QAAQA,CAAA,EAAG;EAClB,MAAM;IACJC,eAAe;IACfC,iBAAiB;IACjBC,cAAc;IACdC,kBAAkB;IAClBC;EACF,CAAC,GAAGC,eAAe,CAAC,CAAC;EACrB;EACA,MAAM;IAAEC,WAAW;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGC,eAAe,CAAC,CAAC;EACxEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,aAAa,CAAC;EAE3C,IAAIG,aAAa,EAAE,OAAOK,oDAAA,cAAK,YAAe,CAAC;EAC/C,IAAIN,WAAW,EAAE,OAAOM,oDAAA,cAAK,6BAAgC,CAAC;EAE9D,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnCZ,cAAc,CAACY,MAAM,EAAE;MAAEC,SAAS,EAAEA,CAAA,KAAMC,KAAK,CAAC;IAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,SAAS,GAAGT,cAAc,CAACU,MAAM,CAACV,cAAc,CAACU,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC;EACzE,OACEP,oDAAA,CAAAQ,2CAAA,QACGZ,cAAc,CAACU,MAAM,EAAEG,GAAG,CAAEC,KAAK,IAAK;IACrC,MAAMC,WAAW,GAAGN,SAAS,CAACzB,EAAE,KAAK8B,KAAK,CAAC9B,EAAE;IAC7C;IACA;IACA;IACA,MAAMgC,SAAS,GAAGD,WAAW,GAAG,gBAAgB,GAAG,MAAM;IAEzD,OACEX,oDAAA,CAACa,KAAK;MAACC,GAAG,EAAEJ,KAAK,CAAC9B,EAAG;MAACgC,SAAS,EAAEA;IAAU,GACzCZ,oDAAA,CAACe,YAAY;MAACC,KAAK,EAAEN,KAAK,CAACM;IAAM,CAAE,CAAC,EACpChB,oDAAA,CAACiB,YAAY,QACXjB,oDAAA;MAAKY,SAAS,EAAC;IAAgB,GAC5BM,aAAa,CAACT,GAAG,CAAEU,OAAO,IACzBnB,oDAAA,CAACoB,UAAU;MACTN,GAAG,EAAEK,OAAO,CAACvC,EAAG;MAChByC,IAAI,EAAEF,OAAO,CAACvC,EAAG;MACjB0C,OAAO,EAAEA,OAAQ;MACjBC,MAAM,EAAEA,CAAC;QAAEC;MAAM,CAAC,KAChBxB,oDAAA,CAACyB,SAAS;QACRN,OAAO,EAAEA,OAAQ;QAAA,GACbK,KAAK;QACTjC,kBAAkB,EAAEA;MAAmB,CACxC;IACD,CACH,CACF,CACE,CACO,CACT,CAAC;EAEZ,CAAC,CACD,CAAC;AAEP","sources":["webpack://simplybook_app/./src/routes/settings/221122settingsId.lazy.jsx"],"sourcesContent":["const useSettingsLoader = (settingsId) => {\n  const menuData = window.simplybook?.settings_menu || []\n  const settingsData = menuData.find((item) => item.id === settingsId)\n\n  if (!settingsData) {\n    throw new Error('Settings not found')\n  }\n  return { settingsData }\n}\n\n// Route Definition\nexport const Route = createLazyFileRoute('/settings/221122settingsId')({\n  loader: ({ params }) => useSettingsLoader(params.settingsId),\n  component: Settings,\n})\n\n// Settings Component\nfunction Settings() {\n  const {\n    currentSettings,\n    settingsIsLoading,\n    updateSettings,\n    settingsIsUpdating,\n    defaultValues,\n  } = useSettingsData()\n  // @todo make sure defaultValues is not empty before using it. I should make it a new component and wrap it in a conditional\n  const { menuIsError, menuIsLoading, currentSection } = useSettingsMenu()\n  console.log('defaultValues', defaultValues)\n\n  if (menuIsLoading) return <div>Loading...</div>\n  if (menuIsError) return <div>Error loading settings menu</div>\n\n  const handleFormSubmit = (values) => {\n    updateSettings(values, { onSuccess: () => reset() })\n  }\n\n  const lastGroup = currentSection.groups[currentSection.groups.length - 1]\n  return (\n    <>\n      {currentSection.groups?.map((group) => {\n        const isLastGroup = lastGroup.id === group.id\n        // const groupSettings = currentSettings.filter(\n        //     (setting) => setting.group_id === group.id\n        // );\n        const className = isLastGroup ? 'rounded-b-none' : 'mb-5'\n\n        return (\n          <Block key={group.id} className={className}>\n            <BlockHeading title={group.title} />\n            <BlockContent>\n              <div className=\"flex flex-wrap\">\n                {groupSettings.map((setting) => (\n                  <Controller\n                    key={setting.id}\n                    name={setting.id}\n                    control={control}\n                    render={({ field }) => (\n                      <FormField\n                        setting={setting}\n                        {...field}\n                        settingsIsUpdating={settingsIsUpdating}\n                      />\n                    )}\n                  />\n                ))}\n              </div>\n            </BlockContent>\n          </Block>\n        )\n      })}\n    </>\n  )\n}\n"],"names":["useSettingsLoader","settingsId","menuData","window","simplybook","settings_menu","settingsData","find","item","id","Error","Route","createLazyFileRoute","loader","params","component","Settings","currentSettings","settingsIsLoading","updateSettings","settingsIsUpdating","defaultValues","useSettingsData","menuIsError","menuIsLoading","currentSection","useSettingsMenu","console","log","createElement","handleFormSubmit","values","onSuccess","reset","lastGroup","groups","length","Fragment","map","group","isLastGroup","className","Block","key","BlockHeading","title","BlockContent","groupSettings","setting","Controller","name","control","render","field","FormField"],"sourceRoot":""}