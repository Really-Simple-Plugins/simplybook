{"version":3,"file":"src_routes_settings_general_lazy_jsx.js","mappings":"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","sources":["webpack://simplybook_app/./src/routes/settings/general.lazy.jsx"],"sourcesContent":["import { createLazyFileRoute } from \"@tanstack/react-router\";\nimport useSettingsData from \"../../hooks/useSettingsData\";\nimport Block from \"../../components/Blocks/Block\";\nimport BlockHeading from \"../../components/Blocks/BlockHeading\";\nimport BlockContent from \"../../components/Blocks/BlockContent\";\nimport { useEffect, useState } from \"react\";\n\nexport const Route = createLazyFileRoute(\"/settings/general\")({\n  component: () => <Settings menu_id=\"general\" />,\n});\n\nconst Settings = ({ menu_id }) => {\n  const {\n    settings,\n    updateSetting,\n    saveSettings,\n    isLoading,\n    isSaving,\n    isError,\n  } = useSettingsData();\n\n  if (isLoading) {\n    return <div>Loading settings...</div>;\n  }\n  if (isError) {\n    return <div>Error loading settings</div>;\n  }\n\n  // only get settings for the current menu_id\n  const currentSettings = settings[menu_id];\n\n  // loop through object currentSettings and create groups of settings, loop\n  // again for fields\n\n  const lastBlockClass = \"rounded-b-none\";\n  return (\n    <>\n      {currentSettings &&\n        Object.keys(currentSettings).map((group) => {\n          const isLastGroup = Object.keys(currentSettings).indexOf(group) === Object.keys(currentSettings).length - 1;\n          return (\n              <Block key={group} title={group} className={isLastGroup ? lastBlockClass : \"mb-5\"}>\n                <BlockHeading title={group} />\n                <BlockContent>\n                  {/*{currentSettings[group].map((field) => (*/}\n                  {/*  // <Field type={field.type} key={field.key} {...field} onChange={(value) => updateSetting(field.key, value)} />*/}\n                  {/*    console.log(field)*/}\n                  {/*))}*/}\n                  <h2>Group: {group}</h2>\n                </BlockContent>\n              </Block>\n          );\n        })}\n      <div className={\"sticky bg-white shadow-md rounded-b-md z-10\"}>\n        <ScrollProgressLine />\n        <div className={\"flex flex-row p-5 justify-end\"}>\n          <button onClick={saveSettings} disabled={isSaving}>\n            {isSaving ? \"Saving...\" : \"Save\"}\n          </button>\n          {isSaving && <div>Saving...</div>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ScrollProgressLine = () => {\n  const [scrollProgress, setScrollProgress] = useState(0);\n  useEffect(() => {\n    const onScroll = () => {\n      const scrollable =\n        document.documentElement.scrollHeight - window.innerHeight;\n      setScrollProgress(Math.round((window.scrollY / scrollable) * 100));\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, []);\n\n  const canScroll = document.documentElement.scrollHeight > window.innerHeight;\n\n  if (!canScroll) {\n    return null;\n  }\n  return (\n      <div className=\"w-full bg-gray-200 h-1\">\n        <div\n            className=\"bg-blue-500 h-full\"\n            style={{ width: `${Math.max(scrollProgress, 10)}%` }}\n        ></div>\n      </div>\n  );\n};"],"names":["createLazyFileRoute","useSettingsData","Block","BlockHeading","BlockContent","useEffect","useState","Route","component","createElement","Settings","menu_id","settings","updateSetting","saveSettings","isLoading","isSaving","isError","currentSettings","lastBlockClass","Fragment","Object","keys","map","group","isLastGroup","indexOf","length","key","title","className","ScrollProgressLine","onClick","disabled","scrollProgress","setScrollProgress","onScroll","scrollable","document","documentElement","scrollHeight","window","innerHeight","Math","round","scrollY","addEventListener","removeEventListener","canScroll","style","width","max"],"sourceRoot":""}