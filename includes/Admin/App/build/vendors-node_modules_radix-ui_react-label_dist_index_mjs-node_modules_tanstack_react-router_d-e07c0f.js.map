{"version":3,"file":"vendors-node_modules_radix-ui_react-label_dist_index_mjs-node_modules_tanstack_react-router_d-e07c0f.js","mappings":";;;;;;;;;;;;;;;AAAA;AAC+B;AAC/B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8CAAiB;AAC1B;AAIE;AACF;;;;;;;;;;;;;;;;;;;ACnBA;;AAEA;AAC+B;AACuB;AACd;AACxC;AACA,YAAY,6CAAgB;AAC5B,yBAAyB,sDAAG;AAC5B,IAAI,gEAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AAIE;AACF;;;;;;;;;;;;;;;;;;;;;AC5BA;AAC+B;AACO;AACM;AACJ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAgB;AAC/B,YAAY,6BAA6B;AACzC,2BAA2B,sDAAI;AAC/B;AACA;AACA;AACA,2BAA2B,sDAAG,SAAS,sCAAsC;AAC7E,GAAG;AACH,kCAAkC,KAAK;AACvC,WAAW;AACX,CAAC,IAAI;AACL;AACA,cAAc,gDAAkB;AAChC;AACA;AAKE;AACF;;;;;;;;;;;;;;;;;;;;AC5CA;AAC+B;AAC4B;AACT;AAClD,WAAW,6CAAgB;AAC3B,UAAU,yBAAyB;AACnC,wBAAwB,2CAAc;AACtC;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAc,+BAA+B,2CAAc;AACvE,eAAe,iDAAoB;AACnC,QAAQ;AACR;AACA;AACA,KAAK;AACL,2BAA2B,sDAAG,cAAc,2CAA2C,iDAAoB,eAAe,+CAAkB,0CAA0C;AACtL;AACA,yBAAyB,sDAAG,cAAc,2CAA2C;AACrF,CAAC;AACD;AACA,gBAAgB,6CAAgB;AAChC,UAAU,yBAAyB;AACnC,MAAM,iDAAoB;AAC1B;AACA,WAAW,+CAAkB;AAC7B;AACA;AACA,0BAA0B,yEAAW;AACrC,KAAK;AACL;AACA,SAAS,2CAAc,uBAAuB,2CAAc;AAC5D,CAAC;AACD;AACA,mBAAmB,UAAU;AAC7B,yBAAyB,sDAAG,CAAC,uDAAQ,IAAI,UAAU;AACnD;AACA;AACA,SAAS,iDAAoB;AAC7B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN,kCAAkC;AAClC,MAAM;AACN;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKE;AACF;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACwC;AACT;AACO;AACe;AACV;AACwD;AACpC;AAC/D;AACA;AACA,iBAAiB,wDAAS;AAC1B,gDAAgD,2CAAc;AAC9D,mBAAmB,0DAAe;AAClC;AACA;AACA,2BAA2B,qBAAqB;AAChD,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,eAAe,0CAAa;AAC5B;AACA,iBAAiB,GAAG;AACpB;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH,eAAe,0CAAa;AAC5B;AACA;AACA;AACA,kBAAkB,0CAAa;AAC/B;AACA;AACA;AACA;AACA,mBAAmB,kEAAc;AACjC;AACA,+BAA+B,6DAAmB;AAClD;AACA;AACA;AACA,4BAA4B,6DAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,uDAAa;AAC7F;AACA,kGAAkG,oDAAS;AAC3G;AACA;AACA,GAAG;AACH,oBAAoB,8CAAiB;AACrC;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,oCAAoC,8CAAiB;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE,kEAAuB;AACzB;AACA;AACA,MAAM,qBAAqB;AAC3B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,qBAAqB,QAAQ;AAC7B,uBAAuB,UAAU;AACjC,oBAAoB,OAAO;AAC3B,wBAAwB,WAAW;AACnC,sBAAsB,SAAS;AAC/B,sBAAsB,SAAS;AAC/B,2BAA2B,cAAc;AACzC,2BAA2B,cAAc;AACzC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,MAAM,oDAAS;AACf;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yCAAyC,2DAAgB,gBAAgB,QAAQ;AACjF,8CAA8C,EAAE,2DAAgB,kBAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sBAAsB;AACpE,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA,KAAK;AACL,qBAAqB,iDAAiD;AACtE,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS,6CAAgB;AACzB,2BAA2B,sDAAG,SAAS,+BAA+B;AACtE,GAAG;AACH;AACA,aAAa,6CAAgB;AAC7B;AACA,YAAY,oBAAoB;AAChC,YAAY,oCAAoC;AAChD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAKE;AACF","sources":["webpack://simplybook_app/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack://simplybook_app/./node_modules/@radix-ui/react-label/dist/index.mjs","webpack://simplybook_app/./node_modules/@radix-ui/react-primitive/dist/index.mjs","webpack://simplybook_app/./node_modules/@radix-ui/react-slot/dist/index.mjs","webpack://simplybook_app/./node_modules/@tanstack/react-router/dist/esm/link.js"],"sourcesContent":["// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/label/src/Label.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Label\";\nvar Label = React.forwardRef((props, forwardedRef) => {\n  return /* @__PURE__ */ jsx(\n    Primitive.label,\n    {\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: (event) => {\n        const target = event.target;\n        if (target.closest(\"button, input, select, textarea\")) return;\n        props.onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }\n    }\n  );\n});\nLabel.displayName = NAME;\nvar Root = Label;\nexport {\n  Label,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/primitive/src/Primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\nimport { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { flushSync } from \"react-dom\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useForwardedRef, deepEqual, useIntersectionObserver, functionalUpdate } from \"./utils.js\";\nimport { removeTrailingSlash, exactPathTest } from \"./path.js\";\nconst preloadWarning = \"Error preloading route! ☝️\";\nfunction useLinkProps(options, forwardedRef) {\n  const router = useRouter();\n  const [isTransitioning, setIsTransitioning] = React.useState(false);\n  const innerRef = useForwardedRef(forwardedRef);\n  const {\n    // custom props\n    activeProps = () => ({ className: \"active\" }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    hash,\n    search,\n    params,\n    to,\n    state,\n    mask,\n    preload: userPreload,\n    preloadDelay: userPreloadDelay,\n    replace,\n    startTransition,\n    resetScroll,\n    viewTransition,\n    // element props\n    children,\n    target,\n    disabled,\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ignoreBlocker,\n    ...rest\n  } = options;\n  const type = React.useMemo(() => {\n    try {\n      new URL(`${to}`);\n      return \"external\";\n    } catch {\n    }\n    return \"internal\";\n  }, [to]);\n  const next = React.useMemo(\n    () => router.buildLocation(options),\n    [router, options]\n  );\n  const preload = React.useMemo(\n    () => userPreload ?? router.options.defaultPreload,\n    [router.options.defaultPreload, userPreload]\n  );\n  const preloadDelay = userPreloadDelay ?? router.options.defaultPreloadDelay ?? 0;\n  const isActive = useRouterState({\n    select: (s) => {\n      const currentPathSplit = removeTrailingSlash(\n        s.location.pathname,\n        router.basepath\n      ).split(\"/\");\n      const nextPathSplit = removeTrailingSlash(\n        next.pathname,\n        router.basepath\n      ).split(\"/\");\n      const pathIsFuzzyEqual = nextPathSplit.every(\n        (d, i) => d === currentPathSplit[i]\n      );\n      const pathTest = (activeOptions == null ? void 0 : activeOptions.exact) ? exactPathTest(s.location.pathname, next.pathname, router.basepath) : pathIsFuzzyEqual;\n      const hashTest = (activeOptions == null ? void 0 : activeOptions.includeHash) ? s.location.hash === next.hash : true;\n      const searchTest = (activeOptions == null ? void 0 : activeOptions.includeSearch) ?? true ? deepEqual(s.location.search, next.search, !(activeOptions == null ? void 0 : activeOptions.exact)) : true;\n      return pathTest && hashTest && searchTest;\n    }\n  });\n  const doPreload = React.useCallback(() => {\n    router.preloadRoute(options).catch((err) => {\n      console.warn(err);\n      console.warn(preloadWarning);\n    });\n  }, [options, router]);\n  const preloadViewportIoCallback = React.useCallback(\n    (entry) => {\n      if (entry == null ? void 0 : entry.isIntersecting) {\n        doPreload();\n      }\n    },\n    [doPreload]\n  );\n  useIntersectionObserver(\n    innerRef,\n    preloadViewportIoCallback,\n    { rootMargin: \"100px\" },\n    { disabled: !!disabled || preload !== \"viewport\" }\n  );\n  if (type === \"external\") {\n    return {\n      ...rest,\n      ref: innerRef,\n      type,\n      href: to,\n      ...children && { children },\n      ...target && { target },\n      ...disabled && { disabled },\n      ...style && { style },\n      ...className && { className },\n      ...onClick && { onClick },\n      ...onFocus && { onFocus },\n      ...onMouseEnter && { onMouseEnter },\n      ...onMouseLeave && { onMouseLeave },\n      ...onTouchStart && { onTouchStart }\n    };\n  }\n  const handleClick = (e) => {\n    if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === \"_self\") && e.button === 0) {\n      e.preventDefault();\n      flushSync(() => {\n        setIsTransitioning(true);\n      });\n      const unsub = router.subscribe(\"onResolved\", () => {\n        unsub();\n        setIsTransitioning(false);\n      });\n      router.commitLocation({\n        ...next,\n        replace,\n        resetScroll,\n        startTransition,\n        viewTransition,\n        ignoreBlocker\n      });\n    }\n  };\n  const handleFocus = (_) => {\n    if (disabled) return;\n    if (preload) {\n      doPreload();\n    }\n  };\n  const handleTouchStart = handleFocus;\n  const handleEnter = (e) => {\n    if (disabled) return;\n    const eventTarget = e.target || {};\n    if (preload) {\n      if (eventTarget.preloadTimeout) {\n        return;\n      }\n      eventTarget.preloadTimeout = setTimeout(() => {\n        eventTarget.preloadTimeout = null;\n        doPreload();\n      }, preloadDelay);\n    }\n  };\n  const handleLeave = (e) => {\n    if (disabled) return;\n    const eventTarget = e.target || {};\n    if (eventTarget.preloadTimeout) {\n      clearTimeout(eventTarget.preloadTimeout);\n      eventTarget.preloadTimeout = null;\n    }\n  };\n  const composeHandlers = (handlers) => (e) => {\n    var _a;\n    (_a = e.persist) == null ? void 0 : _a.call(e);\n    handlers.filter(Boolean).forEach((handler) => {\n      if (e.defaultPrevented) return;\n      handler(e);\n    });\n  };\n  const resolvedActiveProps = isActive ? functionalUpdate(activeProps, {}) ?? {} : {};\n  const resolvedInactiveProps = isActive ? {} : functionalUpdate(inactiveProps, {});\n  const resolvedClassName = [\n    className,\n    resolvedActiveProps.className,\n    resolvedInactiveProps.className\n  ].filter(Boolean).join(\" \");\n  const resolvedStyle = {\n    ...style,\n    ...resolvedActiveProps.style,\n    ...resolvedInactiveProps.style\n  };\n  return {\n    ...rest,\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    href: disabled ? void 0 : next.maskedLocation ? router.history.createHref(next.maskedLocation.href) : router.history.createHref(next.href),\n    ref: innerRef,\n    onClick: composeHandlers([onClick, handleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    disabled: !!disabled,\n    target,\n    ...Object.keys(resolvedStyle).length && { style: resolvedStyle },\n    ...resolvedClassName && { className: resolvedClassName },\n    ...disabled && {\n      role: \"link\",\n      \"aria-disabled\": true\n    },\n    ...isActive && { \"data-status\": \"active\", \"aria-current\": \"page\" },\n    ...isTransitioning && { \"data-transitioning\": \"transitioning\" }\n  };\n}\nfunction createLink(Comp) {\n  return React.forwardRef(function CreatedLink(props, ref) {\n    return /* @__PURE__ */ jsx(Link, { ...props, _asChild: Comp, ref });\n  });\n}\nconst Link = React.forwardRef(\n  (props, ref) => {\n    const { _asChild, ...rest } = props;\n    const { type, ref: innerRef, ...linkProps } = useLinkProps(rest, ref);\n    const children = typeof rest.children === \"function\" ? rest.children({\n      isActive: linkProps[\"data-status\"] === \"active\"\n    }) : rest.children;\n    if (typeof _asChild === \"undefined\") {\n      delete linkProps.disabled;\n    }\n    return React.createElement(\n      _asChild ? _asChild : \"a\",\n      {\n        ...linkProps,\n        ref: innerRef\n      },\n      children\n    );\n  }\n);\nfunction isCtrlEvent(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nexport {\n  Link,\n  createLink,\n  useLinkProps\n};\n//# sourceMappingURL=link.js.map\n"],"names":[],"sourceRoot":""}