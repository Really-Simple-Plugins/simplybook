{"version":3,"file":"src_routes_onboarding_style-widget_lazy_jsx.js","mappings":"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","sources":["webpack://simplybook_app/./src/components/Fields/TextField.jsx","webpack://simplybook_app/./src/components/Forms/FieldWrapper.jsx","webpack://simplybook_app/./src/components/Inputs/ButtonInput.jsx","webpack://simplybook_app/./src/components/Inputs/TextInput.jsx","webpack://simplybook_app/./src/routes/onboarding/style-widget.lazy.jsx"],"sourcesContent":["import {forwardRef} from 'react';\nimport TextInput from '../Inputs/TextInput';\nimport FieldWrapper from '../Forms/FieldWrapper';\n\n/**\n * TextField component\n * @param {object} field - Provided by react-hook-form's Controller\n * @param {object} fieldState - Contains validation state\n * @param {string} label\n * @param {string} help\n * @param {string} context\n * @param {string} className\n * @param {object} props\n * @return {JSX.Element}\n */\nconst TextField = forwardRef(({\n  field,\n  fieldState,\n  label,\n  help,\n  context,\n  className,\n  ...props\n}, ref) => {\n  // Generate a unique ID for the input if not provided\n  const inputId = props.id || field.name;\n\n  return (\n      <FieldWrapper\n          label={label}\n          help={help}\n          error={fieldState.error?.message}\n          context={context}\n          className={className}\n          inputId={inputId}\n      >\n        <TextInput\n            {...field}\n            id={inputId}\n            type=\"text\"\n            {...props}\n        />\n      </FieldWrapper>\n  );\n});\n\nexport default TextField;\n","import * as Label from \"@radix-ui/react-label\";\n\n/**\n * FieldWrapper component\n * @param {string} label\n * @param {string} context\n * @param {string} help\n * @param {string} error\n * @param {boolean} reverseLabel\n * @param {string} className\n * @param {string} inputId\n * @param {JSX.Element} children\n */\nconst FieldWrapper = ({\n  label,\n  context,\n  help,\n  error,\n  reverseLabel = false,\n  className ='',\n  inputId,\n  children,\n}) => {\n  const colReverse = reverseLabel ? \"flex-col-reverse\" : \"\";\n\n  return (\n      <div className={`flex flex-col w-full ${className} pt-4`}>\n        <div className={`flex w-full flex-col ${colReverse}`}>\n          <Label.Root\n              className=\"font-medium text-gray-700 cursor-pointer pb-1\"\n              htmlFor={inputId} // Associate the label with the input ID\n          >\n            {label}\n          </Label.Root>\n          {help && (\n              <p className=\"text-xs font-light text-gray-600 pb-1\">{help}</p> // Placeholder for the help component\n          )}\n          {children}\n        </div>\n        {error && (\n            <p className=\"w-full text-xs pb-1font-light text-red-600\">{error}</p>\n        )}\n        {context && (\n            <p className=\"w-full pb-1 text-xs font-light text-gray-600\">{context}</p>\n        )}\n      </div>\n  );\n};\n\nexport default FieldWrapper;\n","import { Link } from \"@tanstack/react-router\";\n\nconst ButtonInput = ({ children, onClick, link = {}, variant = \"primary\", disabled = false, ...props }) => {\n  // Base styles for both variants\n  const baseStyles = \"font-bold py-2 px-6 rounded-md transition-all duration-200\";\n\n  // Variants for primary and secondary buttons\n  const variants = {\n    primary: \"bg-blue-600 text-white hover:bg-blue-700 active:bg-blue-800\",\n    secondary: \"border border-blue-600 text-blue-600 hover:bg-blue-100 active:bg-blue-200\",\n  };\n\n  // Disabled styles\n  const disabledStyles = \"opacity-50 cursor-not-allowed\";\n\n  // Final className based on variant and disabled state\n  const className = `${baseStyles} ${variants[variant]} ${disabled ? disabledStyles : \"\"}`;\n\n  if (link.to) {\n    return (\n        <Link to={link.to} className={className} {...props} onClick={disabled ? (e) => e.preventDefault() : undefined}>\n          {children}\n        </Link>\n    );\n  }\n\n  return (\n      <button onClick={onClick} className={className} disabled={disabled} {...props}>\n        {children}\n      </button>\n  );\n};\n\nexport default ButtonInput;\n","import {forwardRef} from 'react';\n\n/**\n * Styled text input component\n * @param type\n * @param props\n * @return {JSX.Element}\n * @constructor\n */\nconst TextInput = forwardRef(({ type = \"text\", ...props }, ref) => {\n  return (\n      <input\n          type={type}\n          className=\"\n          w-full rounded-md border border-gray-300 p-2 focus:border-blue-500\n          focus:outline-none focus:ring\n          disabled:bg-gray-200 disabled:cursor-not-allowed disabled:border-gray-200\n          \"\n          {...props}\n      />\n  );\n});\n\nexport default TextInput;","import {createLazyFileRoute} from '@tanstack/react-router';\nimport {__} from '@wordpress/i18n';\nimport TextInput from '../../components/Inputs/TextInput';\nimport ButtonInput from '../../components/Inputs/ButtonInput';\nimport TextField from '../../components/Fields/TextField';\n\nexport const Route = createLazyFileRoute('/onboarding/style-widget')({\n  component: () => {\n\n    return (\n        <>\n          <div\n              className=\"col-span-4 col-start-3 row-span-2 my-12 flex flex-col text-black\">\n            <div className={\"my-1 text-center\"}>\n              <h2 className={\"mt-6 text-base\"}>\n                {__(\"Alpha Bedum Beauty & Welness\")}\n              </h2>\n              <h1 className={\"mt-2 text-2xl font-bold\"}>\n                {__(\"What's your style?\", \"simplybook\")}\n              </h1>\n            </div>\n\n            <div className={\"grid grid-cols-2 gap-3 my-8\"}>\n              <TextField className={\"col-span-2\"}\n                         label={__(\"Company Name\", \"simplybook\")}\n                         value={\"My Business Name\"}\n                         context={__('More customisation available under settings', 'simplybook')}\n              />\n\n            </div>\n            <ButtonInput\n                onClick={() => {}}\n                link={{\n                  to: \"/onboarding/implementation\",\n                }}\n            >\n              {__(\"Next Step: Finish\", \"simplybook\")}\n            </ButtonInput>\n          </div>\n          <div className=\"col-span-4 col-start-7 py-12\">\n            Calender hier\n          </div>\n        </>\n    );\n  },\n});"],"names":["forwardRef","TextInput","FieldWrapper","TextField","field","fieldState","label","help","context","className","props","ref","inputId","id","name","createElement","error","message","type","Label","reverseLabel","children","colReverse","Root","htmlFor","Link","ButtonInput","onClick","link","variant","disabled","baseStyles","variants","primary","secondary","disabledStyles","to","e","preventDefault","undefined","createLazyFileRoute","__","Route","component","Fragment","value"],"sourceRoot":""}