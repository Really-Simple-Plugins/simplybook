(globalThis["webpackChunksimplybook_app"] = globalThis["webpackChunksimplybook_app"] || []).push([["vendors-node_modules_react-compiler-runtime_dist_index_js-node_modules_tanstack_react-router_-184fcb"],{

/***/ "./node_modules/react-compiler-runtime/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-compiler-runtime/dist/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @lightSyntaxTransform
 * @noflow
 * @nolint
 * @preventMunge
 * @preserve-invariant-messages
 */

"use no memo";
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  $dispatcherGuard: () => $dispatcherGuard,
  $makeReadOnly: () => $makeReadOnly,
  $reset: () => $reset,
  $structuralCheck: () => $structuralCheck,
  c: () => c,
  clearRenderCounterRegistry: () => clearRenderCounterRegistry,
  renderCounterRegistry: () => renderCounterRegistry,
  useRenderCounter: () => useRenderCounter
});
module.exports = __toCommonJS(index_exports);
var React = __toESM(__webpack_require__(/*! react */ "react"));
var { useRef, useEffect, isValidElement } = React;
var _a;
var ReactSecretInternals = (
  //@ts-ignore
  (_a = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE) != null ? _a : React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
);
var $empty = Symbol.for("react.memo_cache_sentinel");
var _a2;
var c = (
  // @ts-expect-error
  typeof ((_a2 = React.__COMPILER_RUNTIME) == null ? void 0 : _a2.c) === "function" ? (
    // @ts-expect-error
    React.__COMPILER_RUNTIME.c
  ) : function c2(size) {
    return React.useMemo(() => {
      const $ = new Array(size);
      for (let ii = 0; ii < size; ii++) {
        $[ii] = $empty;
      }
      $[$empty] = true;
      return $;
    }, []);
  }
);
var LazyGuardDispatcher = {};
[
  "readContext",
  "useCallback",
  "useContext",
  "useEffect",
  "useImperativeHandle",
  "useInsertionEffect",
  "useLayoutEffect",
  "useMemo",
  "useReducer",
  "useRef",
  "useState",
  "useDebugValue",
  "useDeferredValue",
  "useTransition",
  "useMutableSource",
  "useSyncExternalStore",
  "useId",
  "unstable_isNewReconciler",
  "getCacheSignal",
  "getCacheForType",
  "useCacheRefresh"
].forEach((name) => {
  LazyGuardDispatcher[name] = () => {
    throw new Error(
      `[React] Unexpected React hook call (${name}) from a React compiled function. Check that all hooks are called directly and named according to convention ('use[A-Z]') `
    );
  };
});
var originalDispatcher = null;
LazyGuardDispatcher["useMemoCache"] = (count) => {
  if (originalDispatcher == null) {
    throw new Error(
      "React Compiler internal invariant violation: unexpected null dispatcher"
    );
  } else {
    return originalDispatcher.useMemoCache(count);
  }
};
function setCurrent(newDispatcher) {
  ReactSecretInternals.ReactCurrentDispatcher.current = newDispatcher;
  return ReactSecretInternals.ReactCurrentDispatcher.current;
}
var guardFrames = [];
function $dispatcherGuard(kind) {
  const curr = ReactSecretInternals.ReactCurrentDispatcher.current;
  if (kind === 0 /* PushGuardContext */) {
    guardFrames.push(curr);
    if (guardFrames.length === 1) {
      originalDispatcher = curr;
    }
    if (curr === LazyGuardDispatcher) {
      throw new Error(
        `[React] Unexpected call to custom hook or component from a React compiled function. Check that (1) all hooks are called directly and named according to convention ('use[A-Z]') and (2) components are returned as JSX instead of being directly invoked.`
      );
    }
    setCurrent(LazyGuardDispatcher);
  } else if (kind === 1 /* PopGuardContext */) {
    const lastFrame = guardFrames.pop();
    if (lastFrame == null) {
      throw new Error(
        "React Compiler internal error: unexpected null in guard stack"
      );
    }
    if (guardFrames.length === 0) {
      originalDispatcher = null;
    }
    setCurrent(lastFrame);
  } else if (kind === 2 /* PushExpectHook */) {
    guardFrames.push(curr);
    setCurrent(originalDispatcher);
  } else if (kind === 3 /* PopExpectHook */) {
    const lastFrame = guardFrames.pop();
    if (lastFrame == null) {
      throw new Error(
        "React Compiler internal error: unexpected null in guard stack"
      );
    }
    setCurrent(lastFrame);
  } else {
    throw new Error("React Compiler internal error: unreachable block" + kind);
  }
}
function $reset($) {
  for (let ii = 0; ii < $.length; ii++) {
    $[ii] = $empty;
  }
}
function $makeReadOnly() {
  throw new Error("TODO: implement $makeReadOnly in react-compiler-runtime");
}
var renderCounterRegistry = /* @__PURE__ */ new Map();
function clearRenderCounterRegistry() {
  for (const counters of renderCounterRegistry.values()) {
    counters.forEach((counter) => {
      counter.count = 0;
    });
  }
}
function registerRenderCounter(name, val) {
  let counters = renderCounterRegistry.get(name);
  if (counters == null) {
    counters = /* @__PURE__ */ new Set();
    renderCounterRegistry.set(name, counters);
  }
  counters.add(val);
}
function removeRenderCounter(name, val) {
  const counters = renderCounterRegistry.get(name);
  if (counters == null) {
    return;
  }
  counters.delete(val);
}
function useRenderCounter(name) {
  const val = useRef(null);
  if (val.current != null) {
    val.current.count += 1;
  }
  useEffect(() => {
    if (val.current == null) {
      const counter = { count: 0 };
      registerRenderCounter(name, counter);
      val.current = counter;
    }
    return () => {
      if (val.current !== null) {
        removeRenderCounter(name, val.current);
      }
    };
  });
}
var seenErrors = /* @__PURE__ */ new Set();
function $structuralCheck(oldValue, newValue, variableName, fnName, kind, loc) {
  function error(l, r, path, depth) {
    const str = `${fnName}:${loc} [${kind}] ${variableName}${path} changed from ${l} to ${r} at depth ${depth}`;
    if (seenErrors.has(str)) {
      return;
    }
    seenErrors.add(str);
    console.error(str);
  }
  const depthLimit = 2;
  function recur(oldValue2, newValue2, path, depth) {
    if (depth > depthLimit) {
      return;
    } else if (oldValue2 === newValue2) {
      return;
    } else if (typeof oldValue2 !== typeof newValue2) {
      error(`type ${typeof oldValue2}`, `type ${typeof newValue2}`, path, depth);
    } else if (typeof oldValue2 === "object") {
      const oldArray = Array.isArray(oldValue2);
      const newArray = Array.isArray(newValue2);
      if (oldValue2 === null && newValue2 !== null) {
        error("null", `type ${typeof newValue2}`, path, depth);
      } else if (newValue2 === null) {
        error(`type ${typeof oldValue2}`, "null", path, depth);
      } else if (oldValue2 instanceof Map) {
        if (!(newValue2 instanceof Map)) {
          error(`Map instance`, `other value`, path, depth);
        } else if (oldValue2.size !== newValue2.size) {
          error(
            `Map instance with size ${oldValue2.size}`,
            `Map instance with size ${newValue2.size}`,
            path,
            depth
          );
        } else {
          for (const [k, v] of oldValue2) {
            if (!newValue2.has(k)) {
              error(
                `Map instance with key ${k}`,
                `Map instance without key ${k}`,
                path,
                depth
              );
            } else {
              recur(v, newValue2.get(k), `${path}.get(${k})`, depth + 1);
            }
          }
        }
      } else if (newValue2 instanceof Map) {
        error("other value", `Map instance`, path, depth);
      } else if (oldValue2 instanceof Set) {
        if (!(newValue2 instanceof Set)) {
          error(`Set instance`, `other value`, path, depth);
        } else if (oldValue2.size !== newValue2.size) {
          error(
            `Set instance with size ${oldValue2.size}`,
            `Set instance with size ${newValue2.size}`,
            path,
            depth
          );
        } else {
          for (const v of newValue2) {
            if (!oldValue2.has(v)) {
              error(
                `Set instance without element ${v}`,
                `Set instance with element ${v}`,
                path,
                depth
              );
            }
          }
        }
      } else if (newValue2 instanceof Set) {
        error("other value", `Set instance`, path, depth);
      } else if (oldArray || newArray) {
        if (oldArray !== newArray) {
          error(
            `type ${oldArray ? "array" : "object"}`,
            `type ${newArray ? "array" : "object"}`,
            path,
            depth
          );
        } else if (oldValue2.length !== newValue2.length) {
          error(
            `array with length ${oldValue2.length}`,
            `array with length ${newValue2.length}`,
            path,
            depth
          );
        } else {
          for (let ii = 0; ii < oldValue2.length; ii++) {
            recur(oldValue2[ii], newValue2[ii], `${path}[${ii}]`, depth + 1);
          }
        }
      } else if (isValidElement(oldValue2) || isValidElement(newValue2)) {
        if (isValidElement(oldValue2) !== isValidElement(newValue2)) {
          error(
            `type ${isValidElement(oldValue2) ? "React element" : "object"}`,
            `type ${isValidElement(newValue2) ? "React element" : "object"}`,
            path,
            depth
          );
        } else if (oldValue2.type !== newValue2.type) {
          error(
            `React element of type ${oldValue2.type}`,
            `React element of type ${newValue2.type}`,
            path,
            depth
          );
        } else {
          recur(
            oldValue2.props,
            newValue2.props,
            `[props of ${path}]`,
            depth + 1
          );
        }
      } else {
        for (const key in newValue2) {
          if (!(key in oldValue2)) {
            error(
              `object without key ${key}`,
              `object with key ${key}`,
              path,
              depth
            );
          }
        }
        for (const key in oldValue2) {
          if (!(key in newValue2)) {
            error(
              `object with key ${key}`,
              `object without key ${key}`,
              path,
              depth
            );
          } else {
            recur(oldValue2[key], newValue2[key], `${path}.${key}`, depth + 1);
          }
        }
      }
    } else if (typeof oldValue2 === "function") {
      return;
    } else if (isNaN(oldValue2) || isNaN(newValue2)) {
      if (isNaN(oldValue2) !== isNaN(newValue2)) {
        error(
          `${isNaN(oldValue2) ? "NaN" : "non-NaN value"}`,
          `${isNaN(newValue2) ? "NaN" : "non-NaN value"}`,
          path,
          depth
        );
      }
    } else if (oldValue2 !== newValue2) {
      error(oldValue2, newValue2, path, depth);
    }
  }
  recur(oldValue, newValue, "", 0);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (0);
//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@tanstack/react-router/dist/esm/link.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tanstack/react-router/dist/esm/link.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Link: () => (/* binding */ Link),
/* harmony export */   createLink: () => (/* binding */ createLink),
/* harmony export */   linkOptions: () => (/* binding */ linkOptions),
/* harmony export */   useLinkProps: () => (/* binding */ useLinkProps)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "react/jsx-runtime");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ "react-dom");
/* harmony import */ var _tanstack_router_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tanstack/router-core */ "./node_modules/@tanstack/router-core/dist/esm/path.js");
/* harmony import */ var _tanstack_router_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/router-core */ "./node_modules/@tanstack/router-core/dist/esm/utils.js");
/* harmony import */ var _tanstack_router_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tanstack/router-core */ "./node_modules/@tanstack/router-core/dist/esm/link.js");
/* harmony import */ var _useRouterState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./useRouterState.js */ "./node_modules/@tanstack/react-router/dist/esm/useRouterState.js");
/* harmony import */ var _useRouter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useRouter.js */ "./node_modules/@tanstack/react-router/dist/esm/useRouter.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@tanstack/react-router/dist/esm/utils.js");
/* harmony import */ var _useMatch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./useMatch.js */ "./node_modules/@tanstack/react-router/dist/esm/useMatch.js");
"use client";








function useLinkProps(options, forwardedRef) {
  const router = (0,_useRouter_js__WEBPACK_IMPORTED_MODULE_3__.useRouter)();
  const [isTransitioning, setIsTransitioning] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);
  const hasRenderFetched = react__WEBPACK_IMPORTED_MODULE_1__.useRef(false);
  const innerRef = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.useForwardedRef)(forwardedRef);
  const {
    // custom props
    activeProps = () => ({ className: "active" }),
    inactiveProps = () => ({}),
    activeOptions,
    to,
    preload: userPreload,
    preloadDelay: userPreloadDelay,
    hashScrollIntoView,
    replace,
    startTransition,
    resetScroll,
    viewTransition,
    // element props
    children,
    target,
    disabled,
    style,
    className,
    onClick,
    onFocus,
    onMouseEnter,
    onMouseLeave,
    onTouchStart,
    ignoreBlocker,
    ...rest
  } = options;
  const {
    // prevent these from being returned
    params: _params,
    search: _search,
    hash: _hash,
    state: _state,
    mask: _mask,
    reloadDocument: _reloadDocument,
    ...propsSafeToSpread
  } = rest;
  const type = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {
    try {
      new URL(`${to}`);
      return "external";
    } catch {
    }
    return "internal";
  }, [to]);
  const currentSearch = (0,_useRouterState_js__WEBPACK_IMPORTED_MODULE_5__.useRouterState)({
    select: (s) => s.location.search,
    structuralSharing: true
  });
  const parentRouteId = (0,_useMatch_js__WEBPACK_IMPORTED_MODULE_6__.useMatch)({ strict: false, select: (s) => s.pathname });
  options = {
    from: parentRouteId,
    ...options
  };
  const next = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(
    () => router.buildLocation(options),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [router, options, currentSearch]
  );
  const preload = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {
    if (options.reloadDocument) {
      return false;
    }
    return userPreload ?? router.options.defaultPreload;
  }, [router.options.defaultPreload, userPreload, options.reloadDocument]);
  const preloadDelay = userPreloadDelay ?? router.options.defaultPreloadDelay ?? 0;
  const isActive = (0,_useRouterState_js__WEBPACK_IMPORTED_MODULE_5__.useRouterState)({
    select: (s) => {
      if (activeOptions == null ? void 0 : activeOptions.exact) {
        const testExact = (0,_tanstack_router_core__WEBPACK_IMPORTED_MODULE_7__.exactPathTest)(
          s.location.pathname,
          next.pathname,
          router.basepath
        );
        if (!testExact) {
          return false;
        }
      } else {
        const currentPathSplit = (0,_tanstack_router_core__WEBPACK_IMPORTED_MODULE_7__.removeTrailingSlash)(
          s.location.pathname,
          router.basepath
        ).split("/");
        const nextPathSplit = (0,_tanstack_router_core__WEBPACK_IMPORTED_MODULE_7__.removeTrailingSlash)(
          next.pathname,
          router.basepath
        ).split("/");
        const pathIsFuzzyEqual = nextPathSplit.every(
          (d, i) => d === currentPathSplit[i]
        );
        if (!pathIsFuzzyEqual) {
          return false;
        }
      }
      if ((activeOptions == null ? void 0 : activeOptions.includeSearch) ?? true) {
        const searchTest = (0,_tanstack_router_core__WEBPACK_IMPORTED_MODULE_8__.deepEqual)(s.location.search, next.search, {
          partial: !(activeOptions == null ? void 0 : activeOptions.exact),
          ignoreUndefined: !(activeOptions == null ? void 0 : activeOptions.explicitUndefined)
        });
        if (!searchTest) {
          return false;
        }
      }
      if (activeOptions == null ? void 0 : activeOptions.includeHash) {
        return s.location.hash === next.hash;
      }
      return true;
    }
  });
  const doPreload = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {
    router.preloadRoute(options).catch((err) => {
      console.warn(err);
      console.warn(_tanstack_router_core__WEBPACK_IMPORTED_MODULE_9__.preloadWarning);
    });
  }, [options, router]);
  const preloadViewportIoCallback = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(
    (entry) => {
      if (entry == null ? void 0 : entry.isIntersecting) {
        doPreload();
      }
    },
    [doPreload]
  );
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.useIntersectionObserver)(
    innerRef,
    preloadViewportIoCallback,
    { rootMargin: "100px" },
    { disabled: !!disabled || !(preload === "viewport") }
  );
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.useLayoutEffect)(() => {
    if (hasRenderFetched.current) {
      return;
    }
    if (!disabled && preload === "render") {
      doPreload();
      hasRenderFetched.current = true;
    }
  }, [disabled, doPreload, preload]);
  if (type === "external") {
    return {
      ...propsSafeToSpread,
      ref: innerRef,
      type,
      href: to,
      ...children && { children },
      ...target && { target },
      ...disabled && { disabled },
      ...style && { style },
      ...className && { className },
      ...onClick && { onClick },
      ...onFocus && { onFocus },
      ...onMouseEnter && { onMouseEnter },
      ...onMouseLeave && { onMouseLeave },
      ...onTouchStart && { onTouchStart }
    };
  }
  const handleClick = (e) => {
    if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === "_self") && e.button === 0) {
      e.preventDefault();
      (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync)(() => {
        setIsTransitioning(true);
      });
      const unsub = router.subscribe("onResolved", () => {
        unsub();
        setIsTransitioning(false);
      });
      return router.navigate({
        ...options,
        replace,
        resetScroll,
        hashScrollIntoView,
        startTransition,
        viewTransition,
        ignoreBlocker
      });
    }
  };
  const handleFocus = (_) => {
    if (disabled) return;
    if (preload) {
      doPreload();
    }
  };
  const handleTouchStart = handleFocus;
  const handleEnter = (e) => {
    if (disabled) return;
    const eventTarget = e.target || {};
    if (preload) {
      if (eventTarget.preloadTimeout) {
        return;
      }
      eventTarget.preloadTimeout = setTimeout(() => {
        eventTarget.preloadTimeout = null;
        doPreload();
      }, preloadDelay);
    }
  };
  const handleLeave = (e) => {
    if (disabled) return;
    const eventTarget = e.target || {};
    if (eventTarget.preloadTimeout) {
      clearTimeout(eventTarget.preloadTimeout);
      eventTarget.preloadTimeout = null;
    }
  };
  const composeHandlers = (handlers) => (e) => {
    var _a;
    (_a = e.persist) == null ? void 0 : _a.call(e);
    handlers.filter(Boolean).forEach((handler) => {
      if (e.defaultPrevented) return;
      handler(e);
    });
  };
  const resolvedActiveProps = isActive ? (0,_tanstack_router_core__WEBPACK_IMPORTED_MODULE_8__.functionalUpdate)(activeProps, {}) ?? {} : {};
  const resolvedInactiveProps = isActive ? {} : (0,_tanstack_router_core__WEBPACK_IMPORTED_MODULE_8__.functionalUpdate)(inactiveProps, {});
  const resolvedClassName = [
    className,
    resolvedActiveProps.className,
    resolvedInactiveProps.className
  ].filter(Boolean).join(" ");
  const resolvedStyle = {
    ...style,
    ...resolvedActiveProps.style,
    ...resolvedInactiveProps.style
  };
  return {
    ...propsSafeToSpread,
    ...resolvedActiveProps,
    ...resolvedInactiveProps,
    href: disabled ? void 0 : next.maskedLocation ? router.history.createHref(next.maskedLocation.href) : router.history.createHref(next.href),
    ref: innerRef,
    onClick: composeHandlers([onClick, handleClick]),
    onFocus: composeHandlers([onFocus, handleFocus]),
    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),
    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),
    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),
    disabled: !!disabled,
    target,
    ...Object.keys(resolvedStyle).length && { style: resolvedStyle },
    ...resolvedClassName && { className: resolvedClassName },
    ...disabled && {
      role: "link",
      "aria-disabled": true
    },
    ...isActive && { "data-status": "active", "aria-current": "page" },
    ...isTransitioning && { "data-transitioning": "transitioning" }
  };
}
function createLink(Comp) {
  return react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function CreatedLink(props, ref) {
    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Link, { ...props, _asChild: Comp, ref });
  });
}
const Link = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(
  (props, ref) => {
    const { _asChild, ...rest } = props;
    const {
      type: _type,
      ref: innerRef,
      ...linkProps
    } = useLinkProps(rest, ref);
    const children = typeof rest.children === "function" ? rest.children({
      isActive: linkProps["data-status"] === "active"
    }) : rest.children;
    if (typeof _asChild === "undefined") {
      delete linkProps.disabled;
    }
    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(
      _asChild ? _asChild : "a",
      {
        ...linkProps,
        ref: innerRef
      },
      children
    );
  }
);
function isCtrlEvent(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
const linkOptions = (options) => {
  return options;
};

//# sourceMappingURL=link.js.map


/***/ }),

/***/ "./node_modules/@tanstack/router-core/dist/esm/link.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tanstack/router-core/dist/esm/link.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   preloadWarning: () => (/* binding */ preloadWarning)
/* harmony export */ });
const preloadWarning = "Error preloading route! ☝️";

//# sourceMappingURL=link.js.map


/***/ }),

/***/ "./node_modules/clsx/dist/clsx.mjs":
/*!*****************************************!*\
  !*** ./node_modules/clsx/dist/clsx.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clsx: () => (/* binding */ clsx),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clsx);

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_react-compiler-runtime_dist_index_js-node_modules_tanstack_react-router_-184fcb.js.map